groups:
  - name: tests
    jobs:
      - metric-proxy-unit-tests
      - test-metric-proxy-bump-on-cf-for-k8s
  - name: ship-it
    jobs:
      - metric-proxy-cut-major
      - metric-proxy-cut-minor
      - metric-proxy-cut-patch
      - create-metric-proxy-release

resources:
- name: metric-proxy-main-src
  type: git
  source:
    branch: main
    uri: git@github.com:cloudfoundry/metric-proxy
    private_key: ((oratos-bot-private-key))
    ignore_paths:
    - README.md
    - version
    - docs/**
    - ci/**

- name: metric-proxy-main-full
  type: git
  source:
    branch: main
    uri: git@github.com:cloudfoundry/metric-proxy
    private_key: ((oratos-bot-private-key))

- name: metric-proxy-version
  type: semver
  source:
    branch: main
    driver: git
    file: version
    # on 2 lines because: https://github.com/concourse/semver-resource/issues/79
    private_key: |
      ((oratos-bot-private-key))
    uri: git@github.com:cloudfoundry/metric-proxy.git

- name: cf-for-k8s-main
  type: git
  source:
    branch: main
    uri: git@github.com:cloudfoundry/cf-for-k8s
    private_key: ((oratos-bot-private-key))

- name: cf-for-k8s-ci
  type: git
  icon: github
  source:
    uri: git@github.com:cloudfoundry/cf-for-k8s
    branch: develop
    private_key: ((cf_for_k8s_readonly_deploy_key.private_key))
    paths:
    - ci/**

- name: ready-pool
  type: pool
  icon: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: main
    pool: k8s-dev/ready
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

- name: destroy-pool
  type: pool
  icon: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: main
    pool: k8s-dev/destroy
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

- name: metric-proxy-docker
  type: docker-image
  source:
    username: ((dockerhub.username))
    password: ((dockerhub.password))
    repository: cloudfoundry/metric-proxy
    tag: pipeline-test

- name: metric-proxy-image
  type: registry-image
  source:
    repository: cloudfoundry/metric-proxy
    username: ((dockerhub.username))
    password: ((dockerhub.password))

- name: metric-proxy-github-release
  type: github-release
  source:
    owner: cloudfoundry
    repository: metric-proxy
    access_token: ((logging-github-access-token))
    drafts: true

jobs:
  - name: metric-proxy-unit-tests
    public: true
    plan:
    - in_parallel:
      - get: metric-proxy-main-src
        trigger: true
    - task: run-metric-proxy-unit-tests
      input_mapping:
        metric-proxy: metric-proxy-main-src
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: cloudfoundry/cf-for-k8s-ci
        inputs:
        - name: metric-proxy
        run:
          path: bash
          args:
          - -euc
          - |
            cd metric-proxy
            go test -v ./pkg/...

  - name: test-metric-proxy-bump-on-cf-for-k8s
    public: true
    plan:
    - in_parallel:
      - get: cf-for-k8s-main
      - get: cf-for-k8s-ci
      - get: metric-proxy-main-src
        trigger: true
        passed:
          - metric-proxy-unit-tests
      - get: metric-proxy-docker
    # Puts do an implicit check so this builds the image and immediately makes
    # it available to the next task and dockerhub
    - put: metric-proxy-docker
      params:
        additional_tags: metric-proxy-main-src/ci/dockertags
        dockerfile: metric-proxy-main-src/Dockerfile
        build: metric-proxy-main-src
    - task: update-values-and-vendir-metrics
      file: metric-proxy-main-src/ci/tasks/update-values-and-vendir-metrics.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-main
        metric-proxy: metric-proxy-main-src

    - put: ready-pool
      params:
        acquire: true

    - task: install-cf
      file: cf-for-k8s-ci/ci/tasks/install-cf-on-gke/task.yml
      input_mapping:
        pool-lock: ready-pool
        cf-for-k8s: cf-for-k8s-with-metrics
      params:
        GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
        GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
        DOMAIN: k8s-dev.relint.rocks

    - task: run-smoke-tests
      file: cf-for-k8s-ci/ci/tasks/run-smoke-tests/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-with-metrics
      params:
        SMOKE_TEST_SKIP_SSL: false

    - task: delete-cf
      file: cf-for-k8s-ci/ci/tasks/delete-cf/task.yml
      input_mapping:
        pool-lock: ready-pool
      params:
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
        GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
        GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))

    ensure:
      do:
      - put: destroy-pool
        params:
          add: ready-pool

      - put: ready-pool
        params:
          remove: ready-pool

  - name: metric-proxy-cut-patch
    public: true
    plan:
    - put: metric-proxy-version
      params: {bump: patch}

  - name: metric-proxy-cut-minor
    public: true
    plan:
    - put: metric-proxy-version
      params: {bump: minor}

  - name: metric-proxy-cut-major
    public: true
    plan:
    - put: metric-proxy-version
      params: {bump: major}

  - name: create-metric-proxy-release
    public: true
    plan:
    - in_parallel:
      - get: metric-proxy-main-full
    - task: generate-image-labels-file
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: cloudfoundry/cf-for-k8s-ci
        inputs:
        - name: metric-proxy-main-full
        outputs:
        - name: metric-proxy-labels
        run:
          path: /bin/bash
          args:
          - -c
          - |
            set -euo pipefail
            function parse_git_source() {
              pushd metric-proxy-main-full >/dev/null
                git remote get-url origin
              popd >/dev/null
            }

            # Manually parse revision info from input git resource
            git_ref=$(cat metric-proxy-main-full/.git/ref)
            git_source=$(parse_git_source)

            cat <<EOF > metric-proxy-labels/oci-image-labels
            org.opencontainers.image.revision=${git_ref}
            org.opencontainers.image.source=${git_source}
            EOF
    - task: build-image
      privileged: true
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: vito/oci-build-task
        inputs:
        - name: metric-proxy-main-full
        - name: metric-proxy-labels
        outputs:
        - name: image
        params:
          CONTEXT: metric-proxy-main-full
          LABELS_FILE: metric-proxy-labels/oci-image-labels
        run:
          path: build
    - put: metric-proxy-image
      params:
        image: image/image.tar
        additional_tags: metric-proxy-main-full/version
    - task: prepare-release
      privileged: true
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: cloudfoundry/cf-for-k8s-dind}
        inputs:
          - name: metric-proxy-main-full
          - name: labeled-image
          - name: metric-proxy-image
        outputs:
          - name: metric-proxy-release
        run:
          path: /bin/bash
          args:
          - -ce
          - |
            new_metric_proxy_image_digest=$(cat metric-proxy-image/digest)
            version=$(cat metric-proxy-main-full/version)

            echo $version > metric-proxy-release/name

            pushd metric-proxy-main-full
              git rev-parse HEAD > ../metric-proxy-release/commitish

              trap "pkill dockerd" EXIT
              start-docker >/tmp/docker.log 2>&1 &
              echo 'until docker info; do sleep 5; done' >/usr/local/bin/wait_for_docker
              chmod +x /usr/local/bin/wait_for_docker
              timeout 300 wait_for_docker

              source ./hack/helpers.sh
              updateConfigValues "metric-proxy@${new_metric_proxy_image_digest}" "metric_proxy"
              sed -i "s|version:.*|version: $version|" config/values/_defaults.yml
            popd

            mkdir metric-proxy-release/globs
            cp metric-proxy-main-full/config/*.yml metric-proxy-main-full/config/values/*.yml metric-proxy-release/globs/

            cat << EOF > metric-proxy-release/body
            ### Changelog

            **Image SHA**
            $new_metric_proxy_image_digest

            **Image Tag**
            $version

            EOF
    - put: metric-proxy-github-release
      params:
        name: metric-proxy-release/name
        tag: metric-proxy-release/name
        globs:
        - metric-proxy-release/globs/*
        commitish: metric-proxy-release/commitish
        body: metric-proxy-release/body
